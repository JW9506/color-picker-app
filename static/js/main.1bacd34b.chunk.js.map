{"version":3,"sources":["components/ColorBox/index.tsx","components/Navbar/index.tsx","components/PaletteFooter/index.tsx","components/Palette/index.tsx","seedColors.ts","utils/colorHelper.ts","components/MiniPalette/index.tsx","components/PaletteList/index.tsx","components/SingleColorPalette/index.tsx","components/DraggableColorBox/index.tsx","components/DraggableColorList/index.tsx","components/PaletteMetaForm/index.tsx","components/PaletteFormNav/index.tsx","components/ColorPickerForm/index.tsx","components/NewPaletteForm/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ColorBox","state","copied","changeCopyState","setState","setTimeout","this","props","background","name","id","paletteId","isDarkColor","chroma","luminance","isLightColor","text","onCopy","className","style","clsx","to","process","onClick","e","stopPropagation","React","Component","Navbar","format","open","handleSelectChange","s","target","value","handleChange","closeSnackbar","level","changeLevel","defaultValue","min","max","step","onAfterChange","Select","onChange","MenuItem","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","toUpperCase","ContentProps","onClose","action","IconButton","color","key","aria-label","PaletteFooter","palette","emoji","Palette","changeFormat","colors","colorBoxes","map","SeedColors","paletteName","levels","generatePalette","starterPalette","newPalette","hexColor","numberOfColors","scale","darken","hex","getRange","mode","reverse","i","push","toLowerCase","replace","rgb","css","rgba","styles","createStyles","root","backgroundColor","border","borderRadius","padding","position","overflow","cursor","opacity","height","width","title","display","justifyContent","alignItems","margin","paddingTop","fontSize","marginLeft","miniColor","marginBottom","deleteIcon","right","top","zIndex","transition","withStyles","classes","handleClick","_deletePalette","deletePalette","miniColorBoxes","c","container","flexDirection","flexWrap","nav","textDecoration","boxSizing","gridTemplateColumns","gridGap","PaletteList","goToPalette","history","palettes","p","Math","random","SingleColorPalette","colorId","useState","shades","filter","slice","gatherShades","transform","boxContent","left","bottom","letterSpacing","textTransform","SortableElement","handleDelete","SortableContainer","idx","index","PaletteMetaForm","newPaletteName","stage","showEmojiPicker","preventDefault","handleEmojiSelect","savePalette","native","ValidatorForm","addValidationRule","every","handlePaletteNameDialog","Dialog","DialogTitle","onSelect","showPreview","showSkinTones","aria-labelledby","onSubmit","DialogContent","DialogContentText","label","fullWidth","validators","errorMessages","DialogActions","Button","variant","type","PaletteFormNav","formShowing","handleDrawerOpen","CssBaseline","AppBar","appBar","appBarShift","Toolbar","edge","menuButton","hide","Typography","noWrap","navBtns","button","theme","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","marginRight","spacing","withTheme","marginTop","addColor","colorNameInput","ColorPickerForm","currentColor","newColorName","updateCurrentColor","result","addNewColor","newColor","isFullColor","onChangeComplete","disabled","NewPaletteForm","handleDrawerClose","colorName","shouldCancelStart","tagName","onSortEnd","oldIndex","newIndex","arrayMove","clearColor","addRandomColor","allColors","flatMap","randIdx","floor","length","maxColors","Drawer","drawer","anchor","paper","drawerPaper","drawerHeader","direction","Divider","gutterBottom","buttons","content","contentShift","axis","defaultProps","flexShrink","mixins","toolbar","flexGrow","App","syncLocalStorage","savedPalettes","JSON","parse","localStorage","getItem","seedColors","find","setItem","stringify","exact","path","render","routeProps","findPalette","match","params","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.1bacd34b.chunk.js","sourcesContent":["import React from \"react\"\nimport CopyToClipboard from \"react-copy-to-clipboard\"\nimport clsx from \"clsx\"\nimport \"./index.scss\"\nimport { Link } from \"react-router-dom\"\nimport chroma from \"chroma-js\"\n\ninterface Props {\n  background: string\n  name: string\n  id: string\n  paletteId?: string\n}\n\ninterface State {\n  copied: boolean\n}\n\nclass ColorBox extends React.Component<Props, State> {\n  state: State = {\n    copied: false,\n  }\n  changeCopyState = () => {\n    this.setState({ copied: true }, () => {\n      setTimeout(() => {\n        this.setState({ copied: false })\n      }, 1500)\n    })\n  }\n  render() {\n    const { background, name, id, paletteId } = this.props\n    const { copied } = this.state\n    const isDarkColor = chroma(background).luminance() <= 0.08\n    const isLightColor = chroma(background).luminance() >= 0.5\n    return (\n      <CopyToClipboard text={background} onCopy={this.changeCopyState}>\n        <div className=\"ColorBox\" style={{ background }}>\n          <div\n            className={clsx(\"copy-overlay\", copied && \"show\")}\n            style={{ background }}\n          />\n          <div\n            className={clsx(\n              \"copy-msg\",\n              copied && \"show\",\n              isDarkColor && \"light-text\",\n              isLightColor && \"dark-text\"\n            )}\n          >\n            <h1>copied!</h1>\n            <p>{background}</p>\n          </div>\n          <div className=\"copy-container\">\n            <div className={clsx(\"box-content\", isDarkColor && \"light-text\")}>\n              <span>{name}</span>\n            </div>\n            <button\n              className={clsx(\n                \"copy-button\",\n                isDarkColor && \"light-text\",\n                isLightColor && \"dark-text\"\n              )}\n            >\n              Copy\n            </button>\n          </div>\n          {paletteId && (\n            <Link\n              to={`${process.env.PUBLIC_URL}/palette/${paletteId}/${id}`}\n              onClick={(e) => e.stopPropagation()}\n            >\n              <span className={clsx(\"see-more\", isLightColor && \"dark-text\")}>\n                More\n              </span>\n            </Link>\n          )}\n        </div>\n      </CopyToClipboard>\n    )\n  }\n}\n\nexport default ColorBox\n","import React from \"react\"\nimport \"./index.scss\"\nimport Slider from \"rc-slider\"\nimport \"rc-slider/assets/index.css\"\nimport Select, { SelectProps } from \"@material-ui/core/Select\"\nimport { FormatType } from \"utils/colorHelper\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport Snackbar from \"@material-ui/core/Snackbar\"\nimport CloseIcon from \"@material-ui/icons/Close\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport { Link } from \"react-router-dom\"\n\ninterface Props {\n  level?: number\n  changeLevel?: (level: number) => void\n  handleChange: (value: FormatType) => void\n}\ninterface State {\n  format: FormatType\n  open: boolean\n}\nclass Navbar extends React.Component<Props, State> {\n  state: State = {\n    format: \"hex\",\n    open: false,\n  }\n  handleSelectChange: SelectProps[\"onChange\"] = (e) => {\n    this.setState(\n      (s) => ({\n        format: e.target.value as FormatType,\n        open: !s.open,\n      }),\n      () => {\n        this.props.handleChange(this.state.format)\n      }\n    )\n  }\n  closeSnackbar = () => {\n    this.setState((s) => ({\n      open: !s.open,\n    }))\n  }\n  render() {\n    const { level, changeLevel } = this.props\n    const { format, open } = this.state\n    return (\n      <header className=\"Navbar\">\n        <div className=\"logo\">\n          <Link to=\"/\">reactcolorpicker</Link>\n        </div>\n        {level && changeLevel && (\n          <div className=\"slider-container\">\n            <span>Level: {level}</span>\n            <div className=\"slider\">\n              <Slider\n                defaultValue={level}\n                min={100}\n                max={900}\n                step={100}\n                onAfterChange={changeLevel}\n              />\n            </div>\n          </div>\n        )}\n\n        <div className=\"select-container\">\n          <Select value={format} onChange={this.handleSelectChange}>\n            <MenuItem value=\"hex\">HEX - #ffffff</MenuItem>\n            <MenuItem value=\"rgb\">RGB - rgb(255,255,255)</MenuItem>\n            <MenuItem value=\"rgba\">RGBA - rgba(255,255,255,1.0)</MenuItem>\n          </Select>\n        </div>\n        <Snackbar\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n          open={open}\n          autoHideDuration={3000}\n          message={\n            <span id=\"message-id\">\n              Format Changed to {format.toUpperCase()}!\n            </span>\n          }\n          ContentProps={{ \"aria-describedby\": \"message-id\" }}\n          onClose={this.closeSnackbar}\n          action={[\n            <IconButton\n              onClick={this.closeSnackbar}\n              color=\"inherit\"\n              key=\"close\"\n              aria-label=\"close\"\n            >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </header>\n    )\n  }\n}\n\nexport default Navbar\n","import React from \"react\"\n\ninterface Props {\n  palette: string\n  emoji: string\n}\n\nconst PaletteFooter: React.FC<Props> = ({ palette, emoji }) => {\n  return (\n    <footer className=\"pallette-footer\">\n      {palette}\n      <span className=\"emoji\">{emoji}</span>\n    </footer>\n  )\n}\n\nexport default PaletteFooter\n","import React from \"react\"\nimport \"./index.scss\"\nimport ColorBox from \"components/ColorBox\"\nimport { ExpandedPalette, FormatType } from \"utils/colorHelper\"\nimport Navbar from \"components/Navbar\"\nimport PaletteFooter from \"components/PaletteFooter\"\n\ntype Props = ExpandedPalette\ninterface State {\n  level: number\n  format: FormatType\n}\n\nclass Palette extends React.Component<Props, State> {\n  state: State = {\n    level: 500,\n    format: \"hex\",\n  }\n  changeLevel = (level: number) => {\n    this.setState({ level })\n  }\n  changeFormat = (value: FormatType) => {\n    this.setState({ format: value })\n  }\n  render() {\n    const { colors, palette, emoji, id } = this.props\n    const { level, format } = this.state\n    const colorBoxes = colors[level].map((color) => (\n      <ColorBox\n        key={color.id}\n        background={color[format]}\n        name={color.name}\n        id={color.id}\n        paletteId={id}\n      />\n    ))\n    return (\n      <div className=\"Palette\">\n        <Navbar\n          level={level}\n          changeLevel={this.changeLevel}\n          handleChange={this.changeFormat}\n        />\n        <div className=\"Palette-colors\">{colorBoxes}</div>\n        <PaletteFooter palette={palette} emoji={emoji} />\n      </div>\n    )\n  }\n}\n\nexport default Palette\n","const SeedColors = [\n  {\n    paletteName: \"Material UI Colors\",\n    id: \"material-ui-colors\",\n    emoji: \"🎨\",\n    colors: [\n      { name: \"red\", color: \"#F44336\" },\n      { name: \"pink\", color: \"#E91E63\" },\n      { name: \"purple\", color: \"#9C27B0\" },\n      { name: \"deeppurple\", color: \"#673AB7\" },\n      { name: \"indigo\", color: \"#3F51B5\" },\n      { name: \"blue\", color: \"#2196F3\" },\n      { name: \"lightblue\", color: \"#03A9F4\" },\n      { name: \"cyan\", color: \"#00BCD4\" },\n      { name: \"teal\", color: \"#009688\" },\n      { name: \"green\", color: \"#4CAF50\" },\n      { name: \"lightgreen\", color: \"#8BC34A\" },\n      { name: \"lime\", color: \"#CDDC39\" },\n      { name: \"yellow\", color: \"#FFEB3B\" },\n      { name: \"amber\", color: \"#FFC107\" },\n      { name: \"orange\", color: \"#FF9800\" },\n      { name: \"deeporange\", color: \"#FF5722\" },\n      { name: \"brown\", color: \"#795548\" },\n      { name: \"grey\", color: \"#9E9E9E\" },\n      { name: \"bluegrey\", color: \"#607D8B\" },\n      { name: \"hellokittypink\", color: \"#B01455\" },\n    ],\n  },\n  {\n    paletteName: \"Flat UI Colors v1\",\n    id: \"flat-ui-colors-v1\",\n    emoji: \"🤙\",\n    colors: [\n      { name: \"Turquoise\", color: \"#1abc9c\" },\n      { name: \"Emerald\", color: \"#2ecc71\" },\n      { name: \"PeterRiver\", color: \"#3498db\" },\n      { name: \"Amethyst\", color: \"#9b59b6\" },\n      { name: \"WetAsphalt\", color: \"#34495e\" },\n      { name: \"GreenSea\", color: \"#16a085\" },\n      { name: \"Nephritis\", color: \"#27ae60\" },\n      { name: \"BelizeHole\", color: \"#2980b9\" },\n      { name: \"Wisteria\", color: \"#8e44ad\" },\n      { name: \"MidnightBlue\", color: \"#2c3e50\" },\n      { name: \"SunFlower\", color: \"#f1c40f\" },\n      { name: \"Carrot\", color: \"#e67e22\" },\n      { name: \"Alizarin\", color: \"#e74c3c\" },\n      { name: \"Clouds\", color: \"#ecf0f1\" },\n      { name: \"Concrete\", color: \"#95a5a6\" },\n      { name: \"Orange\", color: \"#f39c12\" },\n      { name: \"Pumpkin\", color: \"#d35400\" },\n      { name: \"Pomegranate\", color: \"#c0392b\" },\n      { name: \"Silver\", color: \"#bdc3c7\" },\n      { name: \"Asbestos\", color: \"#7f8c8d\" },\n    ],\n  },\n  {\n    paletteName: \"Flat UI Colors Dutch\",\n    id: \"flat-ui-colors-dutch\",\n    emoji: \"🇳🇱\",\n    colors: [\n      { name: \"Sunflower\", color: \"#FFC312\" },\n      { name: \"Energos\", color: \"#C4E538\" },\n      { name: \"BlueMartina\", color: \"#12CBC4\" },\n      { name: \"LavenderRose\", color: \"#FDA7DF\" },\n      { name: \"BaraRose\", color: \"#ED4C67\" },\n      { name: \"RadiantYellow\", color: \"#F79F1F\" },\n      { name: \"AndroidGreen\", color: \"#A3CB38\" },\n      { name: \"MediterraneanSea\", color: \"#1289A7\" },\n      { name: \"LavenderTea\", color: \"#D980FA\" },\n      { name: \"VerryBerry\", color: \"#B53471\" },\n      { name: \"PuffinsBill\", color: \"#EE5A24\" },\n      { name: \"PixelatedGrass\", color: \"#009432\" },\n      { name: \"MerchantMarineBlue\", color: \"#0652DD\" },\n      { name: \"ForgottenPurple\", color: \"#9980FA\" },\n      { name: \"HollyHock\", color: \"#833471\" },\n      { name: \"RedPigment\", color: \"#EA2027\" },\n      { name: \"TurkishAqua\", color: \"#006266\" },\n      { name: \"20000LeaguesUnderTheSea\", color: \"#1B1464\" },\n      { name: \"CircumorbitalRing\", color: \"#5758BB\" },\n      { name: \"MagentaPurple\", color: \"#6F1E51\" },\n    ],\n  },\n  {\n    paletteName: \"Flat UI Colors American\",\n    id: \"flat-ui-colors-american\",\n    emoji: \"🇺🇸\",\n    colors: [\n      { name: \"LightGreenishBlue\", color: \"#55efc4\" },\n      { name: \"FadedPoster\", color: \"#81ecec\" },\n      { name: \"GreenDarnerTail\", color: \"#74b9ff\" },\n      { name: \"ShyMoment\", color: \"#a29bfe\" },\n      { name: \"CityLights\", color: \"#dfe6e9\" },\n      { name: \"MintLeaf\", color: \"#00b894\" },\n      { name: \"RobinsEggBlue\", color: \"#00cec9\" },\n      { name: \"ElectronBlue\", color: \"#0984e3\" },\n      { name: \"ExodusFruit\", color: \"#6c5ce7\" },\n      { name: \"SoothingBreeze\", color: \"#b2bec3\" },\n      { name: \"SourLemon\", color: \"#ffeaa7\" },\n      { name: \"FirstDate\", color: \"#fab1a0\" },\n      { name: \"PinkGlamour\", color: \"#ff7675\" },\n      { name: \"Pico8Pink\", color: \"#fd79a8\" },\n      { name: \"AmericanRiver\", color: \"#636e72\" },\n      { name: \"BrightYarrow\", color: \"#fdcb6e\" },\n      { name: \"OrangeVille\", color: \"#e17055\" },\n      { name: \"Chi-Gong\", color: \"#d63031\" },\n      { name: \"PrunusAvium\", color: \"#e84393\" },\n      { name: \"DraculaOrchid\", color: \"#2d3436\" },\n    ],\n  },\n  {\n    paletteName: \"Flat UI Colors Aussie\",\n    id: \"flat-ui-colors-aussie\",\n    emoji: \"🇦🇺\",\n    colors: [\n      { name: \"Beekeeper\", color: \"#f6e58d\" },\n      { name: \"SpicedNectarine\", color: \"#ffbe76\" },\n      { name: \"PinkGlamour\", color: \"#ff7979\" },\n      { name: \"JuneBud\", color: \"#badc58\" },\n      { name: \"CoastalBreeze\", color: \"#dff9fb\" },\n      { name: \"Turbo\", color: \"#f9ca24\" },\n      { name: \"QuinceJelly\", color: \"#f0932b\" },\n      { name: \"CarminePink\", color: \"#eb4d4b\" },\n      { name: \"PureApple\", color: \"#6ab04c\" },\n      { name: \"HintOfIcePack\", color: \"#c7ecee\" },\n      { name: \"MiddleBlue\", color: \"#7ed6df\" },\n      { name: \"Heliotrope\", color: \"#e056fd\" },\n      { name: \"ExodusFruit\", color: \"#686de0\" },\n      { name: \"DeepKoamaru\", color: \"#30336b\" },\n      { name: \"SoaringEagle\", color: \"#95afc0\" },\n      { name: \"GreenlandGreen\", color: \"#22a6b3\" },\n      { name: \"SteelPink\", color: \"#be2edd\" },\n      { name: \"Blurple\", color: \"#4834d4\" },\n      { name: \"DeepCove\", color: \"#130f40\" },\n      { name: \"WizardGrey\", color: \"#535c68\" },\n    ],\n  },\n  {\n    paletteName: \"Flat UI Colors British\",\n    id: \"flat-ui-colors-british\",\n    emoji: \"🇬🇧\",\n    colors: [\n      { name: \"ProtossPylon\", color: \"#00a8ff\" },\n      { name: \"Periwinkle\", color: \"#9c88ff\" },\n      { name: \"Rise-N-Shine\", color: \"#fbc531\" },\n      { name: \"DownloadProgress\", color: \"#4cd137\" },\n      { name: \"Seabrook\", color: \"#487eb0\" },\n      { name: \"VanaDylBlue\", color: \"#0097e6\" },\n      { name: \"MattPurple\", color: \"#8c7ae6\" },\n      { name: \"NanohanachaGold\", color: \"#e1b12c\" },\n      { name: \"SkirretGreen\", color: \"#44bd32\" },\n      { name: \"Naval\", color: \"#40739e\" },\n      { name: \"NasturcianFlower\", color: \"#e84118\" },\n      { name: \"LynxWhite\", color: \"#f5f6fa\" },\n      { name: \"BlueberrySoda\", color: \"#7f8fa6\" },\n      { name: \"MazarineBlue\", color: \"#273c75\" },\n      { name: \"BlueNights\", color: \"#353b48\" },\n      { name: \"HarleyOrange\", color: \"#c23616\" },\n      { name: \"HintOfPensive\", color: \"#dcdde1\" },\n      { name: \"ChainGangGrey\", color: \"#718093\" },\n      { name: \"PicoVoid\", color: \"#192a56\" },\n      { name: \"ElectroMagnetic\", color: \"#2f3640\" },\n    ],\n  },\n  {\n    paletteName: \"Flat UI Colors Spanish\",\n    id: \"flat-ui-colors-spanish\",\n    emoji: \"🇪🇸\",\n    colors: [\n      { name: \"JacksonsPurple\", color: \"#40407a\" },\n      { name: \"C64Purple\", color: \"#706fd3\" },\n      { name: \"SwanWhite\", color: \"#f7f1e3\" },\n      { name: \"SummerSky\", color: \"#34ace0\" },\n      { name: \"CelestialGreen\", color: \"#33d9b2\" },\n      { name: \"LuckyPoint\", color: \"#2c2c54\" },\n      { name: \"Liberty\", color: \"#474787\" },\n      { name: \"HotStone\", color: \"#aaa69d\" },\n      { name: \"DevilBlue\", color: \"#227093\" },\n      { name: \"PalmSpringsSplash\", color: \"#218c74\" },\n      { name: \"FlourescentRed\", color: \"#ff5252\" },\n      { name: \"SyntheticPumpkin\", color: \"#ff793f\" },\n      { name: \"CrocodileTooth\", color: \"#d1ccc0\" },\n      { name: \"MandarinSorbet\", color: \"#ffb142\" },\n      { name: \"SpicedButterNut\", color: \"#ffda79\" },\n      { name: \"EyeOfNewt\", color: \"#b33939\" },\n      { name: \"ChileanFire\", color: \"#cd6133\" },\n      { name: \"GreyPorcelain\", color: \"#84817a\" },\n      { name: \"AlamedaOchre\", color: \"#cc8e35\" },\n      { name: \"Desert\", color: \"#ccae62\" },\n    ],\n  },\n  {\n    paletteName: \"Flat UI Colors Indian\",\n    id: \"flat-ui-colors-indian\",\n    emoji: \"🇮🇳\",\n    colors: [\n      { name: \"OrchidOrange\", color: \"#FEA47F\" },\n      { name: \"SpiroDiscoBall\", color: \"#25CCF7\" },\n      { name: \"HoneyGlow\", color: \"#EAB543\" },\n      { name: \"SweetGarden\", color: \"#55E6C1\" },\n      { name: \"FallingStar\", color: \"#CAD3C8\" },\n      { name: \"RichGardenia\", color: \"#F97F51\" },\n      { name: \"ClearChill\", color: \"#1B9CFC\" },\n      { name: \"WhitePepper\", color: \"#F8EFBA\" },\n      { name: \"Keppel\", color: \"#58B19F\" },\n      { name: \"ShipsOfficer\", color: \"#2C3A47\" },\n      { name: \"FieryFuchsia\", color: \"#B33771\" },\n      { name: \"BlueBell\", color: \"#3B3B98\" },\n      { name: \"GeorgiaPeach\", color: \"#FD7272\" },\n      { name: \"OasisStream\", color: \"#9AECDB\" },\n      { name: \"BrightUbe\", color: \"#D6A2E8\" },\n      { name: \"MagentaPurple\", color: \"#6D214F\" },\n      { name: \"EndingNavyBlue\", color: \"#182C61\" },\n      { name: \"SasquatchSocks\", color: \"#FC427B\" },\n      { name: \"PineGlade\", color: \"#BDC581\" },\n      { name: \"HighlighterLavender\", color: \"#82589F\" },\n    ],\n  },\n  {\n    paletteName: \"Flat UI Colors French\",\n    id: \"flat-ui-colors-french\",\n    emoji: \"🇫🇷\",\n    colors: [\n      { name: \"FlatFlesh\", color: \"#fad390\" },\n      { name: \"MelonMelody\", color: \"#f8c291\" },\n      { name: \"Livid\", color: \"#6a89cc\" },\n      { name: \"Spray\", color: \"#82ccdd\" },\n      { name: \"ParadiseGreen\", color: \"#b8e994\" },\n      { name: \"SquashBlossom\", color: \"#f6b93b\" },\n      { name: \"MandarinRed\", color: \"#e55039\" },\n      { name: \"AzraqBlue\", color: \"#4a69bd\" },\n      { name: \"Dupain\", color: \"#60a3bc\" },\n      { name: \"AuroraGreen\", color: \"#78e08f\" },\n      { name: \"IcelandPoppy\", color: \"#fa983a\" },\n      { name: \"TomatoRed\", color: \"#eb2f06\" },\n      { name: \"YueGuangBlue\", color: \"#1e3799\" },\n      { name: \"GoodSamaritan\", color: \"#3c6382\" },\n      { name: \"Waterfall\", color: \"#38ada9\" },\n      { name: \"CarrotOrange\", color: \"#e58e26\" },\n      { name: \"JalapenoRed\", color: \"#b71540\" },\n      { name: \"DarkSapphire\", color: \"#0c2461\" },\n      { name: \"ForestBlues\", color: \"#0a3d62\" },\n      { name: \"ReefEncounter\", color: \"#079992\" },\n    ],\n  },\n]\n\nexport type PaletteShape = typeof SeedColors[number]\n\nexport default SeedColors\n","import chroma from \"chroma-js\"\nimport { PaletteShape } from \"seedColors\"\n\nconst levels = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900]\n\ninterface ExpandedColor {\n  name: string\n  id: string\n  hex: string\n  rgb: string\n  rgba: string\n}\n\nexport type FormatType = \"hex\" | \"rgb\" | \"rgba\"\n\nexport interface ExpandedPalette {\n  palette: string\n  id: string\n  emoji: string\n  colors: { [level: number]: ExpandedColor[] }\n}\n\nexport default function generatePalette(starterPalette: PaletteShape) {\n  let newPalette: ExpandedPalette = {\n    palette: starterPalette.paletteName,\n    id: starterPalette.id,\n    emoji: starterPalette.emoji,\n    colors: {},\n  }\n  for (const level of levels) newPalette.colors[level] = []\n  for (const { color, name } of starterPalette.colors) {\n    const scale = generateScale(color, 10).reverse()\n    for (const i in scale)\n      newPalette.colors[levels[i]].push({\n        name: `${name} ${levels[i]}`,\n        id: name.toLowerCase().replace(/ /g, \"-\"),\n        hex: scale[i],\n        rgb: chroma(scale[i]).css(),\n        rgba: chroma(scale[i])\n          .css()\n          .replace(\"rgb\", \"rgba\")\n          .replace(\")\", \",1.0)\"),\n      })\n  }\n  return newPalette\n}\n\nfunction getRange(hexColor: string): string[] {\n  const end = \"#fff\"\n  return [chroma(hexColor).darken(1.4).hex(), hexColor, end]\n}\n\nfunction generateScale(hexColor: string, numberOfColors: number): string[] {\n  return chroma.scale(getRange(hexColor)).mode(\"lab\").colors(numberOfColors)\n}\n","import React from \"react\"\nimport { PaletteShape } from \"seedColors\"\nimport { createStyles, withStyles, WithStyles } from \"@material-ui/styles\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\n\nconst styles = createStyles({\n  root: {\n    backgroundColor: \"white\",\n    border: \"1px solid black\",\n    borderRadius: \"5px\",\n    padding: \"0.5rem\",\n    position: \"relative\",\n    overflow: \"hidden\",\n    cursor: \"pointer\",\n    \"&:hover svg\": {\n      opacity: 1,\n    },\n  },\n  colors: {\n    backgroundColor: \"white\",\n    height: \"150px\",\n    width: \"100%\",\n    borderRadius: \"5px\",\n    overflow: \"hidden\",\n  },\n  title: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    margin: \"0\",\n    color: \"black\",\n    paddingTop: \"0.5rem\",\n    fontSize: \"1rem\",\n    position: \"relative\",\n  },\n  emoji: {\n    marginLeft: \"0.5rem\",\n    fontSize: \"1.5rem\",\n  },\n  miniColor: {\n    height: \"25%\",\n    width: \"20%\",\n    display: \"inline-block\",\n    margin: \"0 auto\",\n    position: \"relative\",\n    marginBottom: \"-3.5px\",\n  },\n  deleteIcon: {\n    color: \"white\",\n    backgroundColor: \"#eb3d30\",\n    width: 20,\n    height: 20,\n    position: \"absolute\",\n    right: 0,\n    top: 0,\n    padding: 1,\n    zIndex: 10,\n    opacity: 0,\n    transition: \"all 0.3s ease-in-out\",\n  },\n})\n\ninterface OwnProps {\n  name: string\n  emoji: string\n  colors: PaletteShape[\"colors\"]\n  handleClick: () => void\n  deletePalette: () => void\n}\n\ntype Props = WithStyles<typeof styles> & OwnProps\n\nconst MiniPalette: React.FC<Props> = ({\n  classes,\n  name,\n  emoji,\n  colors,\n  handleClick,\n  deletePalette: _deletePalette,\n}) => {\n  const miniColorBoxes = colors.map((c) => (\n    <div\n      key={c.name}\n      className={classes.miniColor}\n      style={{ backgroundColor: c.color }}\n    ></div>\n  ))\n\n  const deletePalette = (e: React.MouseEvent) => {\n    e.stopPropagation()\n    _deletePalette()\n  }\n\n  return (\n    <div className={classes.root} onClick={handleClick}>\n      <DeleteIcon className={classes.deleteIcon} onClick={deletePalette} />\n      <div className={classes.colors}>{miniColorBoxes}</div>\n      <h5 className={classes.title}>\n        {name} <span className={classes.emoji}>{emoji}</span>\n      </h5>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(MiniPalette)\n","import React from \"react\"\nimport { RouteChildrenProps, Link } from \"react-router-dom\"\nimport { PaletteShape } from \"seedColors\"\nimport { createStyles, withStyles, WithStyles } from \"@material-ui/styles\"\nimport MiniPalette from \"components/MiniPalette\"\n\nconst styles = createStyles({\n  root: {\n    backgroundColor: \"blue\",\n    height: \"100vh\",\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    justifyContent: \"center\",\n  },\n  container: {\n    width: \"50%\",\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    flexDirection: \"column\",\n    flexWrap: \"wrap\",\n  },\n  nav: {\n    display: \"flex\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    color: \"white\",\n    alignItems: \"center\",\n    \"& a\": {\n      color: \"white\",\n      textDecoration: \"none\",\n    },\n  },\n  palette: {\n    boxSizing: \"border-box\",\n    width: \"100%\",\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(3, 30%)\",\n    gridGap: \"5%\",\n  },\n})\n\ninterface OwnProps {\n  palettes: PaletteShape[]\n  deletePalette: (id: string) => void\n}\n\ntype Props = WithStyles<typeof styles> & RouteChildrenProps & OwnProps\n\nclass PaletteList extends React.Component<Props> {\n  goToPalette = (id: string) => {\n    this.props.history.push(`/palette/${id}`)\n  }\n  render() {\n    const { classes, palettes, deletePalette } = this.props\n    return (\n      <div className={classes.root}>\n        <div className={classes.container}>\n          <nav className={classes.nav}>\n            <h1>React Colors</h1>\n            <Link to={`${process.env.PUBLIC_URL}/palette/new`}>Create Palette</Link>\n          </nav>\n          <div className={classes.palette}>\n            {palettes.map((p) => (\n              <MiniPalette\n                key={Math.random()}\n                name={p.paletteName}\n                emoji={p.emoji}\n                colors={p.colors}\n                deletePalette={() => deletePalette(p.id)}\n                handleClick={() => this.goToPalette(p.id)}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(PaletteList)\n","import React, { useState } from \"react\"\nimport { FormatType } from \"utils/colorHelper\"\nimport { ExpandedPalette } from \"utils/colorHelper\"\nimport ColorBox from \"components/ColorBox\"\nimport Navbar from \"components/Navbar\"\nimport PaletteFooter from \"components/PaletteFooter\"\nimport { Link } from \"react-router-dom\"\n\ninterface OwnProps {\n  colorId: string\n}\ntype Props = ExpandedPalette & OwnProps\n\nconst SingleColorPalette: React.FC<Props> = ({\n  palette,\n  id,\n  colors,\n  colorId,\n  emoji,\n}) => {\n  const [state, setState] = useState<{ format: FormatType }>({ format: \"hex\" })\n  const changeFormat = (value: FormatType) => {\n    setState({ format: value })\n  }\n  const _shades = gatherShades(colors, colorId)\n  const colorBoxes = _shades.map((color) => (\n    <ColorBox\n      key={color.hex}\n      background={color[state.format]}\n      name={color.name}\n      id={color.id}\n    />\n  ))\n  return (\n    <div className=\"SingleColorPalette Palette\">\n      <Navbar handleChange={changeFormat} />\n      <div className=\"Palette-colors\">\n        {colorBoxes}\n        <div className=\"go-back ColorBox\">\n          <Link className=\"back-button\" to={`${process.env.PUBLIC_URL}/palette/${id}`}>\n            Go Back\n          </Link>\n        </div>\n      </div>\n      <PaletteFooter palette={palette} emoji={emoji} />\n    </div>\n  )\n}\n\nexport default SingleColorPalette\n\nfunction gatherShades(colors: ExpandedPalette[\"colors\"], colorId: string) {\n  let shades = []\n  for (const key in colors) {\n    shades.push(colors[key].filter((c) => c.id === colorId)[0])\n  }\n  return shades.slice(1)\n}\n","import React from \"react\"\nimport { createStyles, WithStyles, withStyles } from \"@material-ui/core/styles\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport { SortableElement } from \"react-sortable-hoc\"\n\nconst styles = createStyles({\n  root: {\n    height: \"20%\",\n    width: \"25%\",\n    margin: \"0 auto\",\n    display: \"inline-block\",\n    position: \"relative\",\n    cursor: \"pointer\",\n    marginBottom: \"-6.5px\",\n    \"&:hover svg\": {\n      color: \"white\",\n      transform: \"scale(1.2)\",\n    },\n  },\n  boxContent: {\n    position: \"absolute\",\n    width: \"100%\",\n    left: 0,\n    bottom: 0,\n    color: \"rgba(0, 0, 0, 1)\",\n    letterSpacing: 1,\n    textTransform: \"uppercase\",\n    fontSize: 15,\n    padding: 10,\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  deleteIcon: {\n    color: \"rgba(0,0,0,0.5)\",\n    transition: \"all 0.3s ease-in-out\",\n  },\n})\n\ninterface OwnProps {\n  name: string\n  color: string\n  handleDelete: () => void\n}\n\ntype Props = WithStyles<typeof styles> & OwnProps\n\nconst DraggableColorBox: React.FC<Props> = ({\n  color,\n  classes,\n  name,\n  handleDelete,\n}) => {\n  return (\n    <div className={classes.root} style={{ backgroundColor: color }}>\n      <div className={classes.boxContent}>\n        <span>{name}</span>\n        <DeleteIcon className={classes.deleteIcon} onClick={handleDelete} />\n      </div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(SortableElement(DraggableColorBox))\n","import React from \"react\"\nimport { SortableContainer } from \"react-sortable-hoc\"\nimport DraggableColorBox from \"components/DraggableColorBox\"\nimport { NewColor } from \"components/NewPaletteForm\"\n\ninterface Props {\n  colors: NewColor[]\n  handleDelete: (colorName: string) => void\n}\n\nconst DraggableColorList: React.FC<Props> = ({ colors, handleDelete }) => {\n  return (\n    <div style={{ height: \"100%\" }}>\n      {colors.map((c, idx) => (\n        <DraggableColorBox\n          index={idx}\n          key={Math.random()}\n          name={c.name}\n          color={c.color}\n          handleDelete={() => handleDelete(c.name)}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default SortableContainer(DraggableColorList)\n","import React from \"react\"\nimport Button from \"@material-ui/core/Button\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogContentText from \"@material-ui/core/DialogContentText\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\"\nimport \"emoji-mart/css/emoji-mart.css\"\nimport { Picker, EmojiData } from \"emoji-mart\"\nimport { PaletteShape } from \"seedColors\"\n\ninterface State {\n  newPaletteName: string\n  stage: \"paletteName\" | \"emojiPicker\"\n}\n\ninterface Props {\n  palettes: PaletteShape[]\n  savePalette: (newPaletteName: string, emoji: string) => void\n  handlePaletteNameDialog: () => void\n}\n\nclass PaletteMetaForm extends React.Component<Props, State> {\n  state: State = {\n    newPaletteName: \"\",\n    stage: \"paletteName\",\n  }\n\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target\n    this.setState((s) => ({\n      ...s,\n      [name]: value,\n    }))\n  }\n\n  showEmojiPicker = (e: React.FormEvent) => {\n    e.preventDefault()\n    this.setState({\n      stage: \"emojiPicker\",\n    })\n  }\n\n  handleEmojiSelect = (emoji: EmojiData) => {\n    const { newPaletteName } = this.state\n    if (\"native\" in emoji) this.props.savePalette(newPaletteName, emoji.native)\n    else this.props.savePalette(newPaletteName, emoji.name)\n  }\n\n  componentDidMount() {\n    ValidatorForm.addValidationRule(\n      \"paletteNameUnique\",\n      (paletteName: string) => {\n        if (\n          this.props.palettes.every(\n            (p) => p.paletteName.toLowerCase() !== paletteName.toLowerCase()\n          )\n        )\n          return true\n        return false\n      }\n    )\n  }\n\n  render() {\n    const { newPaletteName, stage } = this.state\n    const { handlePaletteNameDialog } = this.props\n    return (\n      <div>\n        <Dialog\n          open={stage === \"emojiPicker\"}\n          onClose={handlePaletteNameDialog}\n        >\n          <DialogTitle id=\"form-dialog-title\">Pick a Palette Emoji</DialogTitle>\n          <Picker\n            onSelect={this.handleEmojiSelect}\n            title=\"\"\n            showPreview={false}\n            showSkinTones={false}\n          />\n        </Dialog>\n        <Dialog\n          open={stage === \"paletteName\"}\n          aria-labelledby=\"form-dialog-title\"\n          onClose={handlePaletteNameDialog}\n        >\n          <DialogTitle id=\"form-dialog-title\">\n            Choose a Palette Name\n          </DialogTitle>\n          <ValidatorForm onSubmit={this.showEmojiPicker}>\n            <DialogContent>\n              <DialogContentText>\n                Please enter a name for your new beautiful palette. Make sure\n                it's unique\n              </DialogContentText>\n              <TextValidator\n                name=\"newPaletteName\"\n                value={newPaletteName}\n                label=\"Palette Name\"\n                fullWidth\n                margin=\"normal\"\n                onChange={this.handleChange}\n                validators={[\"required\", \"paletteNameUnique\"]}\n                errorMessages={[\n                  \"Palette name is required\",\n                  \"This palette name has been used\",\n                ]}\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button color=\"primary\" onClick={handlePaletteNameDialog}>\n                Cancel\n              </Button>\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                Save Palette\n              </Button>\n            </DialogActions>\n          </ValidatorForm>\n        </Dialog>{\" \"}\n      </div>\n    )\n  }\n}\n\nexport default PaletteMetaForm\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport {\n  Theme,\n  createStyles,\n  WithStyles,\n  withStyles,\n} from \"@material-ui/core/styles\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Typography from \"@material-ui/core/Typography\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport MenuIcon from \"@material-ui/icons/Menu\"\nimport clsx from \"clsx\"\nimport Button from \"@material-ui/core/Button\"\nimport { PaletteShape } from \"seedColors\"\nimport PaletteMetaForm from \"components/PaletteMetaForm\"\n\nexport const drawerWidth = 400\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    appBar: {\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      height: 64,\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create([\"margin\", \"width\"], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: \"none\",\n    },\n    navBtns: {\n      marginRight: \"1rem\",\n      \"& a\": {\n        textDecoration: \"none\",\n      },\n    },\n    button: {\n      margin: \"0 0.5rem\",\n    },\n  })\n\nexport interface NewColor {\n  color: string\n  name: string\n}\n\ninterface OwnProps {\n  open: boolean\n  handleDrawerOpen: () => void\n  savePalette: (newPaletteName: string, emoji: string) => void\n  palettes: PaletteShape[]\n}\n\ntype Props = WithStyles<typeof styles, true> & OwnProps\n\ninterface State {\n  formShowing: boolean\n}\n\nclass PaletteFormNav extends React.Component<Props, State> {\n  state: State = {\n    formShowing: false,\n  }\n\n  handlePaletteNameDialog = () => {\n    this.setState((s) => ({\n      formShowing: !s.formShowing,\n    }))\n  }\n\n  render() {\n    const {\n      classes,\n      handleDrawerOpen,\n      savePalette,\n      open,\n      palettes,\n    } = this.props\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n          color=\"default\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n              Create a Palette\n            </Typography>\n          </Toolbar>\n          <div className={classes.navBtns}>\n            <Link to={`${process.env.PUBLIC_URL}/`} className={classes.button}>\n              <Button variant=\"contained\" color=\"secondary\">\n                Go Back\n              </Button>\n            </Link>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.handlePaletteNameDialog}\n              className={classes.button}\n            >\n              Save\n            </Button>\n          </div>\n        </AppBar>\n        {this.state.formShowing && (\n          <PaletteMetaForm\n            palettes={palettes}\n            savePalette={savePalette}\n            handlePaletteNameDialog={this.handlePaletteNameDialog}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(PaletteFormNav)\n","import React from \"react\"\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\"\nimport { ChromePicker, ColorChangeHandler } from \"react-color\"\nimport Button from \"@material-ui/core/Button\"\nimport { NewColor } from \"components/PaletteFormNav\"\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport {\n  Theme,\n  createStyles,\n  WithStyles,\n  withStyles,\n} from \"@material-ui/core/styles\"\n\ninterface OwnProps {\n  colors: NewColor[]\n  isFullColor: boolean\n  addNewColor: (e: React.FormEvent, newColor: NewColor) => void\n}\n\nconst styles = createStyles({\n  root: {\n    \"& .chrome-picker\": {\n      width: \"100% !important\",\n      marginTop: \"2rem\",\n    },\n  },\n  addColor: {\n    width: \"100%\",\n    padding: \"1rem\",\n    marginTop: \"1rem\",\n    fontSize: \"2rem\",\n  },\n  colorNameInput: {\n    width: \"100%\",\n    height: 70,\n  },\n})\n\ninterface State {\n  currentColor: string\n  newColorName: string\n}\n\ntype Props = WithStyles<typeof styles> & OwnProps\n\nclass ColorPickerForm extends React.Component<Props, State> {\n  state: State = {\n    currentColor: \"teal\",\n    newColorName: \"\",\n  }\n\n  updateCurrentColor: ColorChangeHandler = (result) => {\n    this.setState({ currentColor: result.hex })\n  }\n\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target\n    this.setState((s) => ({\n      ...s,\n      [name]: value,\n    }))\n  }\n\n  addNewColor = (e: React.FormEvent) => {\n    const { newColorName, currentColor } = this.state\n    const newColor = {\n      color: currentColor,\n      name: newColorName,\n    }\n    this.props.addNewColor(e, newColor)\n    this.setState({\n      newColorName: \"\",\n    })\n  }\n\n  componentDidMount() {\n    const { colors } = this.props\n    ValidatorForm.addValidationRule(\"colorNameUnique\", (name: string) => {\n      if (colors.every((c) => c.name.toLowerCase() !== name.toLowerCase()))\n        return true\n      return false\n    })\n    ValidatorForm.addValidationRule(\"colorUnique\", () => {\n      if (colors.every((c) => c.color !== this.state.currentColor)) return true\n      return false\n    })\n  }\n\n  render() {\n    const { isFullColor, classes } = this.props\n    const { currentColor, newColorName } = this.state\n    return (\n      <div className={classes.root}>\n        <ChromePicker\n          color={currentColor}\n          onChangeComplete={this.updateCurrentColor}\n        />\n        <ValidatorForm onSubmit={this.addNewColor}>\n          <TextValidator\n            name=\"newColorName\"\n            className={classes.colorNameInput}\n            label=\"Color Name\"\n            variant=\"filled\"\n            margin=\"normal\"\n            value={newColorName}\n            onChange={this.handleChange}\n            validators={[\"required\", \"colorNameUnique\", \"colorUnique\"]}\n            errorMessages={[\n              \"This field is required\",\n              \"This color name has been used\",\n              \"This color has been used\",\n            ]}\n          />\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            disabled={isFullColor}\n            className={classes.addColor}\n            style={{\n              backgroundColor: isFullColor\n                ? \"rgba(0, 0, 0, 0.12)\"\n                : currentColor,\n            }}\n          >\n            {isFullColor ? \"Palette Full\" : \"Add Color\"}\n          </Button>\n        </ValidatorForm>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(ColorPickerForm)\n","import React from \"react\"\nimport { RouteComponentProps } from \"react-router-dom\"\nimport { PaletteShape } from \"seedColors\"\nimport clsx from \"clsx\"\nimport DraggableColorList from \"components/DraggableColorList\"\nimport PaletteFormNav, { drawerWidth } from \"components/PaletteFormNav\"\nimport { SortEndHandler, SortEventWithTag, SortEvent } from \"react-sortable-hoc\"\nimport arrayMove from \"array-move\"\nimport {\n  Theme,\n  createStyles,\n  WithStyles,\n  withStyles,\n} from \"@material-ui/core/styles\"\nimport Drawer from \"@material-ui/core/Drawer\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Divider from \"@material-ui/core/Divider\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\"\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\"\nimport Button from \"@material-ui/core/Button\"\nimport ColorPickerForm from \"components/ColorPickerForm\"\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n      alignItems: \"center\",\n    },\n    drawerHeader: {\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: theme.spacing(0, 1),\n      width: \"100%\",\n      // to control toolbar height and height of first line of text responsively\n      ...theme.mixins.toolbar,\n      justifyContent: \"flex-end\",\n    },\n    content: {\n      flexGrow: 1,\n      height: \"calc(100vh - 64px)\",\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create(\"margin\", {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n    container: {\n      width: \"90%\",\n      height: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    buttons: {\n      width: \"100%\",\n    },\n    button: {\n      width: \"50%\",\n    },\n  })\n\ninterface OwnProps {\n  savePalette: (newPalette: PaletteShape) => void\n  palettes: PaletteShape[]\n  maxColors: number\n}\n\ntype Props = WithStyles<typeof styles, true> & RouteComponentProps & OwnProps\n\nexport interface NewColor {\n  color: string\n  name: string\n}\n\ninterface State {\n  open: boolean\n  currentColor: string\n  newColorName: string\n  colors: NewColor[]\n}\n\nclass NewPaletteForm extends React.Component<Props, State> {\n  static defaultProps = {\n    maxColors: 20,\n  }\n  state: State = {\n    open: false,\n    currentColor: \"teal\",\n    newColorName: \"\",\n    colors: this.props.palettes[0].colors,\n  }\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true })\n  }\n\n  handleDrawerClose = () => {\n    this.setState({ open: false })\n  }\n\n  addNewColor = (e: React.FormEvent, newColor: NewColor) => {\n    e.preventDefault()\n    this.setState((s) => ({\n      colors: [...s.colors, newColor],\n    }))\n  }\n\n  savePalette = (newPaletteName: string, emoji: string) => {\n    const newPalette: PaletteShape = {\n      paletteName: newPaletteName,\n      id: newPaletteName.toLowerCase().replace(/ /g, \"-\"),\n      emoji,\n      colors: this.state.colors,\n    }\n    this.props.savePalette(newPalette)\n    this.props.history.push(\"/\")\n  }\n\n  handleDelete = (colorName: string) => {\n    this.setState((s) => ({\n      ...s,\n      colors: this.state.colors.filter((c) => c.name !== colorName),\n    }))\n  }\n\n  shouldCancelStart = (e: SortEvent | SortEventWithTag) => {\n    if (\"tagName\" in e.target)\n      return e.target.tagName === \"path\" || e.target.tagName === \"svg\"\n    return false\n  }\n\n  onSortEnd: SortEndHandler = ({ oldIndex, newIndex }) => {\n    this.setState(({ colors }) => ({\n      colors: arrayMove(colors, oldIndex, newIndex),\n    }))\n  }\n\n  clearColor = () => this.setState({ colors: [] })\n\n  addRandomColor = () => {\n    const allColors = this.props.palettes.flatMap((p) => p.colors)\n    const randIdx = Math.floor(Math.random() * allColors.length)\n    this.setState((s) => ({\n      colors: [...s.colors, allColors[randIdx]],\n    }))\n  }\n\n  render() {\n    const { classes, theme, maxColors, palettes } = this.props\n    const { open, colors } = this.state\n    const isFullColor = maxColors <= colors.length\n    return (\n      <div className={classes.root}>\n        <PaletteFormNav\n          open={open}\n          palettes={palettes}\n          savePalette={this.savePalette}\n          handleDrawerOpen={this.handleDrawerOpen}\n        />\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={this.handleDrawerClose}>\n              {theme.direction === \"ltr\" ? (\n                <ChevronLeftIcon />\n              ) : (\n                <ChevronRightIcon />\n              )}\n            </IconButton>\n          </div>\n          <Divider />\n          <div className={classes.container}>\n            <Typography variant=\"h4\" gutterBottom>Design your palette</Typography>\n            <div className={classes.buttons}>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={this.clearColor}\n                className={classes.button}\n              >\n                Clear Palette\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isFullColor}\n                onClick={this.addRandomColor}\n                className={classes.button}\n              >\n                Random Color\n              </Button>\n            </div>\n            <ColorPickerForm\n              colors={colors}\n              isFullColor={isFullColor}\n              addNewColor={this.addNewColor}\n            />\n          </div>\n        </Drawer>\n        <main\n          className={clsx(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n          <div className={classes.drawerHeader} />\n          <DraggableColorList\n            colors={colors}\n            handleDelete={this.handleDelete}\n            axis=\"xy\"\n            shouldCancelStart={this.shouldCancelStart}\n            onSortEnd={this.onSortEnd}\n          />\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(NewPaletteForm)\n","import React from \"react\"\nimport { Route, Switch, RouteComponentProps } from \"react-router-dom\"\nimport Palette from \"components/Palette\"\nimport seedColors, { PaletteShape } from \"seedColors\"\nimport generatePalette from \"utils/colorHelper\"\nimport PaletteList from \"components/PaletteList\"\nimport SingleCOlorPalette from \"components/SingleColorPalette\"\nimport NewPaletteForm from \"components/NewPaletteForm\"\n\ninterface State {\n  palettes: PaletteShape[]\n}\n\nclass App extends React.Component<{}, State> {\n  constructor(props: {}) {\n    super(props)\n    let palettes: PaletteShape[]\n    const savedPalettes: PaletteShape[] = JSON.parse(\n      localStorage.getItem(\"palettes\") || \"[]\"\n    )\n    if (savedPalettes.length > 0) palettes = savedPalettes\n    else palettes = seedColors\n    this.state = {\n      palettes,\n    }\n  }\n\n  findPalette(id: string) {\n    return (\n      this.state.palettes.find((palette) => palette.id === id) ||\n      this.state.palettes[0]\n    )\n  }\n\n  savePalette = (newPalette: PaletteShape) => {\n    this.setState(\n      (s) => ({\n        palettes: [...s.palettes, newPalette],\n      }),\n      this.syncLocalStorage\n    )\n  }\n\n  deletePalette = (id: string) => {\n    this.setState(\n      (s) => ({\n        palettes: s.palettes.filter((p) => p.id !== id),\n      }),\n      this.syncLocalStorage\n    )\n  }\n\n  syncLocalStorage() {\n    localStorage.setItem(\"palettes\", JSON.stringify(this.state.palettes))\n  }\n\n  render() {\n    const { palettes } = this.state\n    return (\n      <Switch>\n        <Route\n          exact\n          path={`${process.env.PUBLIC_URL}/`}\n          render={(routeProps: RouteComponentProps<{ id: string }>) => (\n            <PaletteList\n              palettes={palettes}\n              deletePalette={this.deletePalette}\n              {...routeProps}\n            />\n          )}\n        />\n        <Route\n          exact\n          path={`${process.env.PUBLIC_URL}/palette/new`}\n          render={(routeProps) => (\n            <NewPaletteForm\n              {...routeProps}\n              savePalette={this.savePalette}\n              palettes={palettes}\n            />\n          )}\n        />\n        <Route\n          exact\n          path={`${process.env.PUBLIC_URL}/palette/:id`}\n          render={(routeProps: RouteComponentProps<{ id: string }>) => (\n            <Palette\n              {...generatePalette(this.findPalette(routeProps.match.params.id))}\n            />\n          )}\n        />\n        <Route\n          exact\n          path={`${process.env.PUBLIC_URL}/palette/:paletteId/:colorId`}\n          render={(\n            routeProps: RouteComponentProps<{\n              paletteId: string\n              colorId: string\n            }>\n          ) => (\n            <SingleCOlorPalette\n              colorId={routeProps.match!.params.colorId}\n              {...generatePalette(\n                this.findPalette(routeProps.match.params.paletteId)\n              )}\n            />\n          )}\n        />\n      </Switch>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport App from \"./App\"\nimport \"./index.scss\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}